node () {

deleteDir()

      stage ('Checkout Build Code') {
         checkout scm
       }
      stage ('Download Terraform') {
        sh 'wget https://releases.hashicorp.com/terraform/1.1.9/terraform_1.1.9_linux_amd64.zip'
        sh 'unzip terraform_1.1.9_linux_amd64.zip'
      }

        withCredentials([usernamePassword(credentialsId: 'vRA_System_Admin',
        usernameVariable: 'vRAUserName', passwordVariable: 'vRAPassword')]) {
          stage ('Generate API TOKEN') {
          sh 'chmod +x ./generate_token.sh'
          tmp_param = sh (script:'./generate_token.sh --username $vRAUserName --password $vRAPassword --domain int.sentania.net --host vra.lab.sentania.net', returnStdout: true).trim()
          refresh_token = tmp_param
          }
        }
        withCredentials([
          usernamePassword(credentialsId: 'PrivateCloudServiceID',usernameVariable: 'vRAUserName', passwordVariable: 'vRAPassword'),
          usernamePassword(credentialsId: 'awsAccessKey', usernameVariable: 'access_key', passwordVariable: 'secret_key'),
          usernamePassword(credentialsId: 'AzureSubAndTenant',usernameVariable: 'AzureSubID', passwordVariable: 'AzureTenantID'),
          usernamePassword(credentialsId: 'azzureappid', usernameVariable: 'AzureAppID', passwordVariable: 'AzureAppSecret')]) {
          stage("Execute Terraform Deployment") {  
            sh './terraform init'
            sh "./terraform plan -var refresh_token=${refresh_token} -var azure_subscription_id=$AzureSubID -var azure_tenant_id=$AzureTenantID -var azure_application_id=$AzureAppID -var azure_application_key=$AzureAppSecret -var nsx_url=lab-comp-nsx01.lab.sentania.net -var vra_url=https://vra.lab.sentania.net -var serviceAccountUserName=$vRAUserName -var serviceAccountPassword=$vRAPassword -var awsAccessKey=$access_key -var awsSecretKey=$secret_key -state=/var/lib/jenkins/terraform/vRAPrivateCloud.tfstate -out=deploymentPlan"
            sh './terraform apply -state="/var/lib/jenkins/terraform/vRAPrivateCloud.tfstate" -input=false deploymentPlan'
          }
        }
}